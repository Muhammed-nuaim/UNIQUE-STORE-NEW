<%- include('../layouts/user/header.ejs') %>

<main class="container mx-auto px-4 py-8">
    <div class="w-full max-w-2xl mx-auto">
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Edit Address</h2>
            </div>
            <form id="editAddressForm" class="card-content space-y-4" method="put" action="/updateAddress/<%= address._id %>">
                <div class="space-y-2">
                    <label for="addressType" class="block text-sm font-medium text-black">Address Type</label>
                    <select id="addressType" name="addressType" class="mt-1 block w-full py-2 px-3 border-black bg-white rounded-md shadow-sm">
                        <ooption value="<%=address.addressType %>"><%=address.addressType %></ooption>
                        <option value="Home">Home</option>
                        <option value="WorkSpace">WorkSpace</option>
                        <option value="Shop">Shop</option>
                    </select>
                </div>
                <div class="space-y-2">
                    <label for="name" class="block text-sm font-medium text-black">Name</label>
                    <input type="text" id="name" name="name" value="<%= address.name %>" class="mt-1 focus:ring-indigo-500 py-2 block w-full shadow-sm sm:text-sm border-black rounded-md">
                    <div id="error1" class="error-message"></div>
                </div>
                <div class="space-y-2">
                    <label for="city" class="block text-sm font-medium text-black">City</label>
                    <input type="text" id="city" name="city" value="<%= address.city %>" class="mt-1 focus:ring-indigo-500 py-2 block w-full shadow-sm sm:text-sm border-black rounded-md">
                    <div id="error2" class="error-message"></div>
                </div>
                <div class="space-y-2">
                    <label for="landMark" class="block text-sm font-medium text-black">Landmark</label>
                    <input type="text" id="landMark" name="landMark" value="<%= address.landMark %>" class="mt-1 focus:ring-indigo-500 py-2 block w-full shadow-sm sm:text-sm border-black rounded-md">
                    <div id="error3" class="error-message"></div>
                </div>
                <div class="space-y-2">
                    <label for="state" class="block text-sm font-medium text-black">State</label>
                    <input type="text" id="state" name="state" value="<%= address.state %>" class="mt-1 focus:ring-indigo-500 py-2 block w-full shadow-sm sm:text-sm border-black rounded-md">
                    <div id="error4" class="error-message"></div>
                </div>
                <div class="space-y-2">
                    <label for="pincode" class="block text-sm font-medium text-black">Pincode</label>
                    <input type="text" id="pincode" name="pincode" value="<%= address.pincode %>" class="mt-1 focus:ring-indigo-500 py-2 block w-full shadow-sm sm:text-sm border-black rounded-md">
                    <div id="error5" class="error-message"></div>
                </div>
                <div class="space-y-2">
                    <label for="phone" class="block text-sm font-medium text-black">Phone</label>
                    <input type="tel" id="phone" name="phone" value="<%= address.phone %>" class="mt-1 focus:ring-indigo-500 py-2 block w-full shadow-sm sm:text-sm border-black rounded-md">
                    <div id="error6" class="error-message"></div>
                </div>
                <div class="space-y-2">
                    <label for="altPhone" class="block text-sm font-medium text-black">Alternative Phone (optional)</label>
                    <input type="tel" id="altPhone" name="altPhone" value="<%= address.altPhone %>" class="mt-1 block w-full py-2 sm:text-sm border-black rounded-md">
                    <div id="error7" class="error-message"></div>
                </div>
            </form>
            <div class="card-footer flex justify-between mt-4">
                <button type="button" id="cancelEdit" class="btn btn-outline">Cancel</button>
                <button type="submit" form="editAddressForm" class="btn btn-primary">Save Changes</button>
            </div>
        </div>
    </div>
</main>

<%- include('../layouts/user/footer.ejs') %>

<style>
    .container { width: 100%; max-width: 1200px; margin-left: auto; margin-right: auto; }
    .mx-auto { margin-left: auto; margin-right: auto; }
    .px-4 { padding-left: 1rem; padding-right: 1rem; }
    .py-8 { padding-top: 2rem; padding-bottom: 2rem; }
    .w-full { width: 100%; }
    .max-w-2xl { max-width: 42rem; }
    .card { background-color: white; border-radius: 0.5rem; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06); }
    .card-header { padding: 1.5rem; border-bottom: 1px solid #e5e7eb; }
    .card-title { font-size: 1.25rem; font-weight: 600; }
    .card-content { padding: 1.5rem; }
    .card-footer { padding: 1.5rem; border-top: 1px solid #e5e7eb; }
    .space-y-4 > * + * { margin-top: 1rem; }
    .space-y-2 > * + * { margin-top: 0.5rem; }
    .btn { display: inline-flex; align-items: center; justify-content: center; border-radius: 0.375rem; font-weight: 500; padding: 0.5rem 1rem; transition: background-color 0.2s; }
    .btn-primary { background-color: #3b82f6; color: white; }
    .btn-outline { border: 1px solid #d1d5db; }
    .flex { display: flex; }
    .justify-between { justify-content: space-between; }
    .mt-4 { margin-top: 1rem; }
    .error-message { color: red; font-size: 0.75rem; display: none; }
    input[type="text"], input[type="tel"], select { width: 100%; padding: 0.5rem; border: 1px solid black; border-radius: 0.375rem; }
</style>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById("editAddressForm");

     // Form submission handler
     form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Perform all validations
        const isNameValid = nameValidationChecking();
        const isCityValid = cityValidationChecking();
        const isLandMarkValid = landMarkValidationChecking();
        const isStateValid = stateValidationChecking();
        const isPincodeValid = pincodeValidationChecking();
        const isPhoneValid = phoneValidationChecking();
        const isAltPhoneValid = altPhoneValidationChecking();

        // If all validations pass, proceed with form submission
        if (isNameValid && isCityValid && isLandMarkValid && isStateValid && 
            isPincodeValid && isPhoneValid && isAltPhoneValid) {
            
            // Collect form data
            const formData = {
                addressType: document.getElementById("addressType").value,
                name: document.getElementById("name").value,
                city: document.getElementById("city").value,
                landMark: document.getElementById("landMark").value,
                state: document.getElementById("state").value,
                pincode: document.getElementById("pincode").value,
                phone: document.getElementById("phone").value,
                altPhone: document.getElementById("altPhone").value
            };

            // Submit form via AJAX
            submitAddress(formData);
        }
    });
});

// Clear all error messages
function clearErrors() {
    const errorElements = document.querySelectorAll('.error-message');
    errorElements.forEach(element => {
        element.style.display = 'none';
        element.innerHTML = '';
    });
}

// Validation functions - now return boolean values
function nameValidationChecking() {
    const nameval = document.getElementById("name").value;
    const namepattern = /^[A-Za-z\s]+$/;
    const error1 = document.getElementById("error1");

    if(nameval.trim() === "") {
        error1.style.display = "block";
        error1.innerHTML = "Please enter a valid name";
        return false;
    } else if (!namepattern.test(nameval)) {
        error1.style.display = "block";
        error1.innerHTML = "Name can only contain alphabets and spaces";
        return false;
    } else {
        error1.style.display = "none";
        return true;
    }
}

function cityValidationChecking() {
    const cityval = document.getElementById("city").value;
    const citypattern = /^[A-Za-z\s]+$/;
    const error2 = document.getElementById("error2");

    if(cityval.trim() === "") {
        error2.style.display = "block";
        error2.innerHTML = "Please enter a valid city";
        return false;
    } else if (!citypattern.test(cityval)) {
        error2.style.display = "block";
        error2.innerHTML = "City can only contain alphabets and spaces";
        return false;
    } else {
        error2.style.display = "none";
        return true;
    }
}

function landMarkValidationChecking() {
    const landMarkval = document.getElementById("landMark").value;
    const landMarkpattern = /^[A-Za-z0-9\s]+$/;
    const error3 = document.getElementById("error3");

    if(landMarkval.trim() !== "" && !landMarkpattern.test(landMarkval)) {
        error3.style.display = "block";
        error3.innerHTML = "Landmark can only contain letters, numbers, and spaces";
        return false;
    } else {
        error3.style.display = "none";
        return true;
    }
}

function stateValidationChecking() {
    const stateval = document.getElementById("state").value;
    const statepattern = /^[A-Za-z\s]+$/;
    const error4 = document.getElementById("error4");

    if(stateval.trim() === "") {
        error4.style.display = "block";
        error4.innerHTML = "Please enter a valid state";
        return false;
    } else if (!statepattern.test(stateval)) {
        error4.style.display = "block";
        error4.innerHTML = "State can only contain alphabets and spaces";
        return false;
    } else {
        error4.style.display = "none";
        return true;
    }
}

function pincodeValidationChecking() {
    const pincodeval = document.getElementById("pincode").value;
    const pincodepattern = /^\d{5,6}$/;
    const error5 = document.getElementById("error5");

    if (pincodeval.trim() === "") {
        error5.style.display = "block";
        error5.innerHTML = "Please enter a valid pincode";
        return false;
    } else if (!pincodepattern.test(pincodeval)) {
        error5.style.display = "block";
        error5.innerHTML = "Pincode must be 5 or 6 digits";
        return false;
    } else {
        error5.style.display = "none";
        return true;
    }
}

function phoneValidationChecking() {
    const phoneval = document.getElementById("phone").value;
    const phonepattern = /^\d{10}$/;
    const error6 = document.getElementById("error6");

    if (phoneval.trim() === "") {
        error6.style.display = "block";
        error6.innerHTML = "Please enter a valid phone number";
        return false;
    } else if (!phonepattern.test(phoneval)) {
        error6.style.display = "block";
        error6.innerHTML = "Phone number must be 10 digits";
        return false;
    } else {
        error6.style.display = "none";
        return true;
    }
}

function altPhoneValidationChecking() {
    const altPhoneval = document.getElementById("altPhone").value;
    const phonepattern = /^\d{10}$/;
    const error7 = document.getElementById("error7");

    if(altPhoneval.trim() !== "" && !phonepattern.test(altPhoneval)) {
        error7.style.display = "block";
        error7.innerHTML = "Alternative phone number must be 10 digits";
        return false;
    } else {
        error7.style.display = "none";
        return true;
    }
}

// AJAX submission function
function submitAddress(formData) {
    $.ajax({
        url: "/updateAddress/<%= address._id %>",
        type: "PUT",
        data: JSON.stringify(formData),
        contentType: "application/json",
        success: function(res) {
            if (res.success) {
                Swal.fire({
                    icon: "success",
                    title: "Success",
                    text: res.message,
                }).then(() => {
                    window.location.href = "/userProfile";
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: res.message || "Failed to add address",
                }).then(() => {
                    location.reload();
                })
            }
        },
        error: function(error) {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: "Failed to add address. Please try again.",
            });
            console.error("AJAX Error:",error);
        }
    });
}
</script>